var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.779,1,3.051,2,1.451,3,0.525,4,0.452,5,0.452,6,3.305,7,0.644,8,0.039,9,0.963,10,2.622,11,3.305,12,0.525,13,0.026,14,2.21,15,1.779,16,0.032,17,0.032]],["title/modules/AppModule.html",[18,1.083,19,1.858]],["body/modules/AppModule.html",[1,2.819,2,1.439,3,0.379,4,0.326,5,0.326,7,0.694,8,0.039,9,0.695,10,2.613,11,2.385,12,0.379,13,0.019,16,0.026,17,0.026,18,1.643,19,3.585,20,1.284,21,1.284,22,1.595,23,1.595,24,1.284,25,2.503,26,1.595,27,2.385,28,2.385,29,2.385,30,2.613,31,2.919,32,2.35,33,2.191,34,1.595,35,1.427,36,2.897,37,2.468,38,2.897,39,2.897,40,2.897,41,2.897]],["title/injectables/AppService.html",[10,1.477,42,1.083]],["body/injectables/AppService.html",[3,0.498,4,0.429,5,0.429,7,0.498,8,0.039,9,0.913,10,2.347,12,0.498,13,0.025,16,0.031,17,0.031,42,1.721,43,2.096,44,3.135,45,0.819,46,2.111,47,5.447,48,1.124,49,3.808,50,1.688,51,1.556,52,1.688,53,3.808,54,3.135,55,3.808]],["title/controllers/AuthController.html",[0,1.083,56,1.858]],["body/controllers/AuthController.html",[0,1.435,2,1.435,3,0.519,4,0.447,5,0.447,7,0.64,8,0.039,9,0.952,12,0.519,13,0.026,14,2.186,15,1.76,16,0.032,17,0.032,56,3.031,57,3.27,58,2.807,59,3.972,60,2.167,61,3.27,62,3.972,63,3.27]],["title/modules/AuthModule.html",[18,1.083,30,1.477]],["body/modules/AuthModule.html",[2,1.525,3,0.413,4,0.355,5,0.355,7,0.664,8,0.039,9,0.757,12,0.413,13,0.02,16,0.027,17,0.027,18,1.717,20,1.399,21,1.399,22,1.738,23,1.738,24,1.399,25,2.616,26,2.616,30,2.736,32,1.87,33,2.323,34,1.738,35,1.556,37,1.957,56,2.946,60,2.598,61,2.599,64,2.599,65,2.599,66,2.599,67,3.157,68,2.616,69,3.157,70,2.599]],["title/injectables/AuthService.html",[42,1.083,60,1.329]],["body/injectables/AuthService.html",[3,0.375,4,0.322,5,0.322,7,0.517,8,0.039,9,0.687,12,0.375,13,0.019,15,1.269,16,0.026,17,0.026,42,1.427,43,1.576,45,0.616,46,1.75,48,1.335,50,1.75,51,1.852,52,1.75,60,1.75,68,1.775,71,2.358,72,4.011,73,3.949,74,2.791,75,2.358,76,2.044,77,2.864,78,2.174,79,2.174,80,1.166,81,1.75,82,2.791,83,2.864,84,3.949,85,3.949,86,3.721,87,2.802,88,2.864,89,2.024,90,2.358,91,2.358,92,2.358,93,2.358,94,2.024,95,1.411,96,2.864,97,2.864,98,2.358]],["title/classes/CreatePostDTO.html",[13,0.019,99,1.477]],["body/classes/CreatePostDTO.html",[3,0.16,4,0.138,5,0.138,7,0.489,8,0.038,12,0.16,13,0.017,16,0.013,17,0.013,45,0.263,48,1.322,51,1.666,80,1.522,81,2.087,98,2.843,99,1.01,100,0.541,101,2.852,102,0.863,103,1.173,104,3.27,105,2.647,106,2.647,107,3.431,108,2.647,109,3.454,110,3.454,111,1.871,112,3.454,113,3.27,114,1.984,115,2.843,116,1.921,117,3.16,118,1.222,119,1.222,120,2.049,121,2.049,122,1.222,123,1.222,124,1.922,125,1.222,126,3.1,127,1.687,128,1.687,129,2.049,130,1.222,131,1.222,132,1.222,133,2.049,134,2.167,135,2.552,136,3.738,137,1.27,138,1.687,139,1.222,140,1.222,141,3.1,142,2.18,143,2.049,144,2.049,145,1.222,146,1.222,147,2.049,148,2.049,149,1.222,150,1.222,151,1.006,152,2.647,153,1.222,154,3.1,155,3.1,156,2.049,157,2.049,158,2.049,159,1.222,160,2.843,161,1.687,162,1.687,163,1.687,164,1.222,165,1.222,166,2.049,167,1.687,168,1.222,169,1.222,170,3.1,171,1.222,172,1.222,173,1.449,174,1.222,175,1.222,176,2.647,177,1.222,178,2.049,179,2.049,180,1.901,181,3.27,182,2.141,183,2.049,184,1.222,185,1.006,186,2.049,187,0.602,188,2.049,189,1.222,190,1.222,191,0.672,192,0.863,193,1.222,194,1.006,195,2.843,196,3.27,197,0.602,198,1.222,199,2.049,200,1.006,201,1.222,202,1.222,203,1.222,204,2.049,205,1.222,206,1.222,207,1.006,208,1.006,209,1.871,210,1.871,211,1.222,212,0.863,213,1.222]],["title/classes/CreatePostMetaOptionsDTO.html",[13,0.019,124,1.858]],["body/classes/CreatePostMetaOptionsDTO.html",[3,0.452,4,0.389,5,0.389,7,0.452,8,0.038,12,0.452,13,0.029,16,0.029,17,0.029,45,0.743,48,1.321,51,1.716,80,1.321,100,1.53,101,3.078,103,1.983,114,1.983,116,1.985,124,2.774,180,2.892,182,2.774,187,1.701,192,3.51,209,3.51,210,3.51,214,2.842,215,3.452,216,3.452,217,3.452]],["title/classes/CreateUserDTO.html",[13,0.019,218,1.65]],["body/classes/CreateUserDTO.html",[3,0.363,4,0.313,5,0.313,7,0.363,8,0.038,12,0.363,13,0.025,16,0.025,17,0.025,45,0.597,46,1.713,48,1.493,50,1.231,51,1.841,52,1.231,80,1.42,86,3.661,89,3.144,100,1.231,103,1.713,114,2.131,180,2.647,181,3.183,182,2.981,185,2.287,187,1.368,208,3.183,218,2.128,219,4.309,220,1.963,221,3.661,222,4.447,223,4.809,224,2.778,225,2.778,226,2.778,227,2.778,228,2.778,229,2.778,230,2.778,231,2.778,232,2.778,233,3.866,234,2.778,235,3.866,236,2.778,237,2.778,238,2.778]],["title/classes/GetUserParamsDTO.html",[13,0.019,239,1.65]],["body/classes/GetUserParamsDTO.html",[3,0.447,4,0.385,5,0.385,7,0.582,8,0.038,12,0.447,13,0.029,16,0.029,17,0.029,45,0.736,48,1.01,51,1.453,80,1.01,81,1.971,87,3.364,95,2.579,100,1.516,103,1.971,114,1.516,115,2.816,117,2.757,134,1.516,180,2.449,182,2.757,187,1.685,196,3.662,197,1.685,239,2.449,240,3.144,241,2.816,242,4.448,243,3.42,244,3.42,245,3.42]],["title/classes/PatchPostDTO.html",[13,0.019,246,1.858]],["body/classes/PatchPostDTO.html",[3,0.437,4,0.376,5,0.376,7,0.639,8,0.038,12,0.437,13,0.028,16,0.028,17,0.028,45,0.719,48,0.987,80,0.987,87,3.339,99,1.647,100,1.481,102,2.363,103,1.942,114,1.481,116,1.752,134,1.481,151,2.752,180,2.412,187,1.647,191,1.84,195,3.608,197,1.647,212,3.097,246,2.716,247,3.608,248,3.608,249,4.382,250,3.097,251,3.343,252,3.343,253,2.752,254,2.363,255,4.382,256,2.752]],["title/classes/PatchUserDTO.html",[13,0.019,257,1.858]],["body/classes/PatchUserDTO.html",[3,0.525,4,0.452,5,0.452,7,0.644,8,0.038,12,0.525,13,0.026,16,0.032,17,0.032,100,1.779,191,2.21,218,2.21,220,2.838,248,4.052,253,3.305,257,3.051,258,3.305,259,4.922,260,3.305,261,3.305,262,3.305]],["title/controllers/PostController.html",[0,1.083,263,1.858]],["body/controllers/PostController.html",[0,0.783,2,0.783,3,0.283,4,0.244,5,0.244,7,0.6,8,0.039,9,0.52,12,0.283,13,0.014,14,1.193,15,0.96,16,0.021,17,0.021,45,0.466,46,1.432,48,1.142,50,1.713,51,1.263,52,1.432,58,1.532,78,2.128,79,2.128,80,1.142,81,1.713,99,2.112,111,2.285,114,1.713,116,2.162,134,1.899,191,1.779,197,1.068,246,2.981,254,2.285,256,2.661,263,2.004,264,1.784,265,3.232,266,3.232,267,3.232,268,2.167,269,3.232,270,3.232,271,4.286,272,4.286,273,2.661,274,2.167,275,2.167,276,2.167,277,3.232,278,2.167,279,2.661,280,2.167,281,3.528,282,3.232,283,2.167,284,2.167,285,2.167,286,1.784,287,1.784,288,2.661,289,2.661,290,1.592,291,1.784,292,3.183,293,3.183,294,1.784,295,1.784,296,1.784,297,2.167,298,2.167,299,2.167,300,2.167,301,2.167,302,2.661,303,2.661,304,2.167,305,2.167,306,2.167,307,2.167]],["title/modules/PostModule.html",[18,1.083,31,1.65]],["body/modules/PostModule.html",[2,1.547,3,0.422,4,0.363,5,0.363,7,0.669,8,0.038,9,0.774,12,0.422,13,0.021,16,0.028,17,0.028,18,1.736,20,1.43,21,1.43,22,1.776,23,1.776,24,1.43,25,2.644,26,1.776,31,3.122,32,2.426,33,2.356,34,1.776,35,1.589,37,2.654,70,2.656,263,2.978,290,2.696,291,2.656,308,2.656,309,2.656,310,3.226,311,3.226,312,3.226]],["title/injectables/PostService.html",[42,1.083,290,1.477]],["body/injectables/PostService.html",[3,0.345,4,0.297,5,0.297,7,0.566,8,0.039,9,0.633,12,0.345,13,0.017,14,1.453,15,1.169,16,0.024,17,0.024,42,1.348,43,1.453,45,0.568,46,1.653,48,1.277,50,1.653,51,1.536,52,1.653,74,1.865,75,2.172,76,1.88,78,2.381,79,2.381,80,1.277,81,1.917,82,2.636,91,2.172,94,1.865,95,2.444,99,2.316,101,1.636,104,3.871,113,3.871,116,1.491,173,3.323,191,2.053,254,1.865,273,2.172,279,2.172,290,1.838,313,2.172,314,3.071,315,2.639,316,3.73,317,2.639,318,3.73,319,2.639,320,2.639,321,3.73,322,2.639]],["title/controllers/UserController.html",[0,1.083,323,1.858]],["body/controllers/UserController.html",[0,0.627,2,0.627,3,0.227,4,0.195,5,0.195,7,0.576,8,0.038,9,0.416,12,0.227,13,0.011,14,0.955,15,0.769,16,0.018,17,0.018,45,0.373,46,1.208,48,0.994,50,1.492,51,0.567,52,1.838,58,1.226,76,1.09,78,1.853,79,2.283,80,1.36,81,1.492,82,1.226,95,1.659,111,1.226,114,1.492,116,1.526,117,2.365,127,3.141,128,3.141,134,1.951,137,2.957,197,0.855,212,1.927,218,2.535,239,2.424,250,3.776,257,2.957,262,2.244,281,2.244,286,1.428,287,2.244,288,2.772,289,2.772,292,2.244,293,2.244,294,1.428,295,1.428,296,1.428,302,1.428,303,2.244,323,1.69,324,1.428,325,2.726,326,3.367,327,2.726,328,1.735,329,1.735,330,1.735,331,3.625,332,1.735,333,2.726,334,3.816,335,3.816,336,3.816,337,1.735,338,1.735,339,2.726,340,2.726,341,2.726,342,3.367,343,1.735,344,2.726,345,2.726,346,2.726,347,1.735,348,1.735,349,1.735,350,1.735,351,1.735,352,1.428,353,1.428,354,3.367,355,1.735,356,1.735,357,1.735,358,1.735,359,1.735,360,1.735,361,1.735,362,2.244,363,1.735,364,1.735,365,1.735,366,1.735,367,1.735,368,1.735,369,1.735,370,1.735,371,1.735,372,1.735,373,1.735,374,1.735]],["title/modules/UserModule.html",[18,1.083,32,1.329]],["body/modules/UserModule.html",[2,1.525,3,0.413,4,0.355,5,0.355,7,0.664,8,0.039,9,0.757,12,0.413,13,0.02,16,0.027,17,0.027,18,1.717,20,1.399,21,1.399,22,1.738,23,1.738,24,1.399,25,2.616,26,2.616,30,2.079,32,2.461,33,2.323,34,1.738,35,1.556,37,1.957,68,2.616,76,2.345,323,2.946,353,2.599,375,2.599,376,2.599,377,2.599,378,3.157,379,3.157,380,3.157]],["title/injectables/UserService.html",[42,1.083,76,1.199]],["body/injectables/UserService.html",[3,0.321,4,0.276,5,0.276,7,0.544,8,0.039,9,0.589,12,0.321,13,0.016,15,1.088,16,0.023,17,0.023,42,1.28,43,1.351,45,0.528,46,1.57,48,1.227,50,1.57,51,1.642,52,1.57,60,2.138,63,2.916,68,1.522,72,2.021,74,2.504,76,1.416,78,2.288,79,2.288,80,1.227,81,1.842,87,2.82,89,3.216,90,2.021,92,2.021,93,2.021,94,1.735,95,1.209,137,2.576,221,3.746,239,2.656,240,1.735,250,3.553,314,2.916,331,3.421,352,2.021,381,2.021,382,3.542,383,2.455,384,2.455,385,3.542,386,2.455,387,3.542,388,2.455,389,2.455,390,2.455,391,2.455,392,3.542,393,3.542,394,2.455,395,2.455]],["title/coverage.html",[396,2.88]],["body/coverage.html",[0,1.741,1,1.728,5,0.314,6,2.295,8,0.038,10,1.374,13,0.034,16,0.025,17,0.025,24,1.236,42,1.741,44,2.295,56,1.728,57,2.295,60,1.236,71,2.295,76,1.115,80,0.823,95,1.374,99,1.374,101,2.403,102,2.74,116,1.115,124,1.728,192,1.971,214,2.295,218,1.535,219,2.295,220,2.74,239,1.535,240,1.971,241,2.295,246,1.728,247,2.295,257,1.728,258,2.295,263,1.728,264,2.295,290,1.374,313,2.295,323,1.728,324,2.295,362,2.295,381,2.295,396,1.971,397,2.295,398,2.788,399,2.788,400,5.859,401,4.817,402,4.456,403,5.062,404,2.295,405,2.788,406,2.788,407,2.788,408,2.788,409,2.788,410,2.788]],["title/dependencies.html",[21,1.596,411,2.068]],["body/dependencies.html",[8,0.039,9,0.918,13,0.031,16,0.031,17,0.031,21,1.696,187,1.886,194,3.151,197,1.886,260,3.151,261,3.151,412,3.828,413,3.828,414,5.21,415,3.828,416,3.828,417,3.828,418,3.828,419,3.828,420,3.828,421,3.828,422,3.828,423,3.828,424,3.828,425,3.828,426,3.828]],["title/miscellaneous/enumerations.html",[427,1.557,428,2.965]],["body/miscellaneous/enumerations.html",[8,0.038,16,0.03,17,0.03,45,0.779,107,3.799,116,1.845,137,2.861,138,3.799,142,3.799,160,3.799,161,3.799,162,3.799,163,3.799,200,3.799,210,4.107,427,2.245,428,2.981,429,4.615,430,4.615,431,4.615,432,4.615]],["title/miscellaneous/functions.html",[427,1.557,433,2.965]],["body/miscellaneous/functions.html",[8,0.034,16,0.034,17,0.034,24,2.472,45,0.963,404,3.685,427,2.775,433,3.685,434,4.477]],["title/index.html",[45,0.54,435,2.512,436,2.512]],["body/index.html",[4,0.21,8,0.036,16,0.019,17,0.019,35,2.233,54,2.9,117,2.457,134,0.825,135,1.532,167,4.021,173,2.036,207,1.532,209,1.316,396,1.316,397,2.371,437,1.861,438,1.861,439,3.522,440,2.88,441,1.861,442,1.861,443,1.861,444,1.861,445,2.88,446,1.861,447,1.861,448,3.964,449,1.861,450,4.884,451,1.861,452,4.727,453,1.861,454,1.861,455,1.861,456,2.88,457,1.861,458,2.88,459,1.861,460,3.522,461,1.861,462,1.861,463,1.861,464,1.861,465,1.861,466,1.861,467,3.964,468,4.533,469,2.88,470,1.861,471,1.861,472,1.861,473,1.861,474,4.533,475,2.88,476,3.964,477,1.861,478,2.88,479,1.861,480,1.861,481,2.88,482,4.533,483,3.964,484,1.861,485,2.88,486,1.861,487,1.861,488,1.861,489,1.861,490,3.964,491,1.861,492,1.861,493,1.861,494,1.861,495,2.88,496,1.861,497,1.861,498,1.861,499,1.861,500,1.861,501,2.88,502,1.861,503,1.861,504,1.861,505,2.88,506,1.861,507,1.861,508,3.264,509,2.88,510,1.861,511,1.861,512,1.861,513,1.861,514,1.861,515,1.861,516,1.861,517,1.861,518,2.88,519,1.861,520,1.861,521,1.861,522,1.861,523,3.522,524,1.861,525,1.861,526,1.861,527,1.861,528,1.861,529,1.861,530,2.88,531,1.861,532,1.861,533,1.861,534,1.861,535,1.861,536,2.88,537,1.861,538,1.861,539,1.861,540,2.88,541,2.88,542,1.861,543,1.861,544,1.861,545,1.861,546,1.861,547,1.861,548,1.861,549,1.861,550,1.861,551,1.861,552,1.861,553,1.532,554,1.861,555,1.861,556,1.861,557,1.861,558,1.861,559,1.861,560,1.532]],["title/modules.html",[20,1.806]],["body/modules.html",[8,0.032,16,0.032,17,0.032,19,2.573,20,1.839,30,2.045,31,2.284,32,1.839,508,4.62,561,5.612,562,5.612,563,5.612]],["title/overview.html",[564,3.355]],["body/overview.html",[2,1.077,8,0.038,10,2.273,16,0.026,17,0.026,18,1.077,19,3.54,20,1.32,21,1.32,22,1.64,23,1.64,24,1.32,25,1.64,26,1.64,27,2.453,28,2.453,29,2.453,30,2.635,31,3.012,32,2.425,33,2.233,34,1.64,35,1.468,43,1.64,60,2.425,64,2.453,65,2.453,66,2.453,76,2.188,100,1.32,290,2.273,308,2.453,309,2.453,375,2.453,376,2.453,377,2.453,564,2.453,565,4.614,566,2.979]],["title/properties.html",[103,1.596,411,2.068]],["body/properties.html",[8,0.038,16,0.034,17,0.034,103,1.949,134,1.949,553,3.62,560,3.62,567,4.397,568,4.397,569,4.397]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":568,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":144,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["01t00:00:00.000z",{"_index":206,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["01t00:00:00.000z'})@isiso8601()@isoptional",{"_index":145,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["1",{"_index":346,"title":{},"body":{"controllers/UserController.html":{}}}],["1.1.23",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":360,"title":{},"body":{"controllers/UserController.html":{}}}],["10.0.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["10})@apiquery({name",{"_index":343,"title":{},"body":{"controllers/UserController.html":{}}}],["2",{"_index":321,"title":{},"body":{"injectables/PostService.html":{}}}],["2.1.0",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":281,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["201",{"_index":271,"title":{},"body":{"controllers/PostController.html":{}}}],["2021",{"_index":143,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["4",{"_index":565,"title":{},"body":{"overview.html":{}}}],["6",{"_index":566,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":155,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["_authservice",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["_postservice",{"_index":299,"title":{},"body":{"controllers/PostController.html":{}}}],["_userservice",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{}}}],["allowing",{"_index":496,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":546,"title":{},"body":{"index.html":{}}}],["api",{"_index":345,"title":{},"body":{"controllers/UserController.html":{}}}],["apioperation",{"_index":292,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":269,"title":{},"body":{"controllers/PostController.html":{}}}],["apiproperty",{"_index":195,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/PatchPostDTO.html":{}}}],["apiproperty({description",{"_index":151,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/PatchPostDTO.html":{}}}],["apiproperty({enum",{"_index":133,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["apiproperty({example",{"_index":172,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["apipropertyoptional",{"_index":196,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/GetUserParamsDTO.html":{}}}],["apipropertyoptional({description",{"_index":115,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/GetUserParamsDTO.html":{}}}],["apipropertyoptional({type",{"_index":125,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["apiquery",{"_index":354,"title":{},"body":{"controllers/UserController.html":{}}}],["apiresponse",{"_index":293,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":294,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["apitags('post",{"_index":298,"title":{},"body":{"controllers/PostController.html":{}}}],["apitags('user",{"_index":356,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":358,"title":{},"body":{"controllers/UserController.html":{}}}],["app'})@apiresponse({status",{"_index":337,"title":{},"body":{"controllers/UserController.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":468,"title":{},"body":{"index.html":{}}}],["applications",{"_index":445,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":126,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["asd123",{"_index":245,"title":{},"body":{"classes/GetUserParamsDTO.html":{}}}],["asd123'})@isnotempty()@isstring",{"_index":243,"title":{},"body":{"classes/GetUserParamsDTO.html":{}}}],["auth",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":56,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":553,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":60,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["aws",{"_index":485,"title":{},"body":{"index.html":{}}}],["backers",{"_index":547,"title":{},"body":{"index.html":{}}}],["based",{"_index":480,"title":{},"body":{"index.html":{}}}],["board",{"_index":539,"title":{},"body":{"index.html":{}}}],["body",{"_index":286,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":563,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":561,"title":{},"body":{"modules.html":{}}}],["building",{"_index":440,"title":{},"body":{"index.html":{}}}],["case",{"_index":158,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["channel",{"_index":511,"title":{},"body":{"index.html":{}}}],["check",{"_index":474,"title":{},"body":{"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":100,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"overview.html":{}}}],["clicks",{"_index":495,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":479,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":308,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_imports",{"_index":310,"title":{},"body":{"modules/PostModule.html":{}}}],["cluster_postmodule_providers",{"_index":309,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":375,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":376,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":377,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":502,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["console.log(createuserdto",{"_index":368,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(createuserdto.getfullname",{"_index":370,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(isauth",{"_index":391,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(patchpostdto",{"_index":307,"title":{},"body":{"controllers/PostController.html":{}}}],["const",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["constructor(_authservice",{"_index":383,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(_userservice",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{}}}],["content",{"_index":104,"title":{},"body":{"classes/CreatePostDTO.html":{},"injectables/PostService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('post",{"_index":297,"title":{},"body":{"controllers/PostController.html":{}}}],["controller('user",{"_index":355,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["courses",{"_index":517,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":396,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":191,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["create(post",{"_index":316,"title":{},"body":{"injectables/PostService.html":{}}}],["created",{"_index":273,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["createpost",{"_index":265,"title":{},"body":{"controllers/PostController.html":{}}}],["createpost(@body",{"_index":304,"title":{},"body":{"controllers/PostController.html":{}}}],["createpost(post",{"_index":268,"title":{},"body":{"controllers/PostController.html":{}}}],["createpostdto",{"_index":99,"title":{"classes/CreatePostDTO.html":{}},"body":{"classes/CreatePostDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":124,"title":{"classes/CreatePostMetaOptionsDTO.html":{}},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"coverage.html":{}}}],["createuser",{"_index":325,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":367,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":328,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":218,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["date",{"_index":141,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":114,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["deeper",{"_index":513,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":350,"title":{},"body":{"controllers/UserController.html":{}}}],["defaultvaluepipe(1",{"_index":365,"title":{},"body":{"controllers/UserController.html":{}}}],["defaultvaluepipe(10",{"_index":363,"title":{},"body":{"controllers/UserController.html":{}}}],["defined",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":467,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":484,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":475,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":494,"title":{},"body":{"index.html":{}}}],["description",{"_index":134,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":453,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":525,"title":{},"body":{"index.html":{}}}],["discord",{"_index":510,"title":{},"body":{"index.html":{}}}],["dive",{"_index":512,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":397,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":161,"title":{},"body":{"classes/CreatePostDTO.html":{},"miscellaneous/enumerations.html":{}}}],["dtos/create",{"_index":295,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["dtos/get",{"_index":351,"title":{},"body":{"controllers/UserController.html":{}}}],["dtos/patch",{"_index":296,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["e2e",{"_index":462,"title":{},"body":{"index.html":{}}}],["each",{"_index":170,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["efficient",{"_index":441,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":473,"title":{},"body":{"index.html":{}}}],["email",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/UserService.html":{}}}],["endpoint",{"_index":373,"title":{},"body":{"controllers/UserController.html":{}}}],["ensure",{"_index":471,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":529,"title":{},"body":{"index.html":{}}}],["entries",{"_index":339,"title":{},"body":{"controllers/UserController.html":{}}}],["enum",{"_index":199,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["enumerations",{"_index":428,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/post",{"_index":188,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["example",{"_index":117,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/GetUserParamsDTO.html":{},"controllers/UserController.html":{},"index.html":{}}}],["experience",{"_index":515,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":248,"title":{},"body":{"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{}}}],["false",{"_index":128,"title":{},"body":{"classes/CreatePostDTO.html":{},"controllers/UserController.html":{}}}],["fast",{"_index":488,"title":{},"body":{"index.html":{}}}],["featured",{"_index":120,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["featuredimageurl",{"_index":105,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["features",{"_index":498,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":333,"title":{},"body":{"controllers/UserController.html":{}}}],["fetched",{"_index":359,"title":{},"body":{"controllers/UserController.html":{}}}],["fetched'})@apiquery({name",{"_index":338,"title":{},"body":{"controllers/UserController.html":{}}}],["few",{"_index":490,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":314,"title":{},"body":{"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["findall(getuserparamsdto",{"_index":385,"title":{},"body":{"injectables/UserService.html":{}}}],["findall(userid",{"_index":318,"title":{},"body":{"injectables/PostService.html":{}}}],["findonebyid",{"_index":382,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyid(id",{"_index":387,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":221,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UserService.html":{}}}],["focus",{"_index":497,"title":{},"body":{"index.html":{}}}],["follow",{"_index":533,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":439,"title":{},"body":{"index.html":{}}}],["full",{"_index":528,"title":{},"body":{"index.html":{}}}],["function",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":433,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":493,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":357,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":332,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:userid",{"_index":277,"title":{},"body":{"controllers/PostController.html":{}}}],["getfullname",{"_index":223,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["gethello",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["getpost",{"_index":266,"title":{},"body":{"controllers/PostController.html":{}}}],["getpost(@param('userid",{"_index":300,"title":{},"body":{"controllers/PostController.html":{}}}],["getpost(userid",{"_index":276,"title":{},"body":{"controllers/PostController.html":{}}}],["getting",{"_index":435,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":326,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(getuserparamsdto",{"_index":330,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserparamsdto",{"_index":239,"title":{"classes/GetUserParamsDTO.html":{}},"body":{"classes/GetUserParamsDTO.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["graph",{"_index":520,"title":{},"body":{"index.html":{}}}],["grow",{"_index":543,"title":{},"body":{"index.html":{}}}],["hands",{"_index":514,"title":{},"body":{"index.html":{}}}],["handy",{"_index":503,"title":{},"body":{"index.html":{}}}],["hello",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":518,"title":{},"body":{"index.html":{}}}],["here",{"_index":551,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/images/image.jpg",{"_index":205,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["http://localhost:3000/images/image.jpg'})@isoptional()@isurl",{"_index":122,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["https://nestjs.com",{"_index":557,"title":{},"body":{"index.html":{}}}],["id",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":121,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":477,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":500,"title":{},"body":{"index.html":{}}}],["inject",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["inject(forwardref",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":42,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["install",{"_index":492,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":451,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":369,"title":{},"body":{"controllers/UserController.html":{}}}],["interact",{"_index":521,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":176,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["isauth",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["isemail",{"_index":233,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isemail()@isnotempty",{"_index":224,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isenum",{"_index":177,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["isenum(poststatus",{"_index":203,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["isenum(posttype",{"_index":201,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["isint",{"_index":255,"title":{},"body":{"classes/PatchPostDTO.html":{}}}],["isiso8601",{"_index":178,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["isjson",{"_index":179,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["isnotempty",{"_index":180,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{}}}],["isoptional",{"_index":181,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreateUserDTO.html":{}}}],["isstring",{"_index":182,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{}}}],["isstring()@isnotempty",{"_index":215,"title":{},"body":{"classes/CreatePostMetaOptionsDTO.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(30",{"_index":226,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@isnotempty()@minlength(6",{"_index":230,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(30",{"_index":228,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isurl",{"_index":183,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["items",{"_index":129,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["jane",{"_index":394,"title":{},"body":{"injectables/UserService.html":{}}}],["jane@doe.com",{"_index":395,"title":{},"body":{"injectables/UserService.html":{}}}],["job",{"_index":536,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":538,"title":{},"body":{"index.html":{}}}],["john",{"_index":392,"title":{},"body":{"injectables/UserService.html":{}}}],["john@doe.com",{"_index":393,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":549,"title":{},"body":{"index.html":{}}}],["js",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["json",{"_index":148,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["json.stringify(post",{"_index":322,"title":{},"body":{"injectables/PostService.html":{}}}],["kamil",{"_index":554,"title":{},"body":{"index.html":{}}}],["kebab",{"_index":157,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["key",{"_index":209,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"index.html":{}}}],["lastname",{"_index":222,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["learn",{"_index":506,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":560,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":541,"title":{},"body":{"index.html":{}}}],["limit",{"_index":331,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["linkedin",{"_index":535,"title":{},"body":{"index.html":{}}}],["list",{"_index":334,"title":{},"body":{"controllers/UserController.html":{}}}],["login",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":478,"title":{},"body":{"index.html":{}}}],["loop",{"_index":531,"title":{},"body":{"index.html":{}}}],["makes",{"_index":486,"title":{},"body":{"index.html":{}}}],["managing",{"_index":499,"title":{},"body":{"index.html":{}}}],["matches",{"_index":184,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["matches(/^[a",{"_index":202,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":482,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":234,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(30",{"_index":235,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["message",{"_index":156,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["meta",{"_index":192,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"coverage.html":{}}}],["metadata",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":106,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["methods",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":185,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreateUserDTO.html":{}}}],["minlength(3",{"_index":208,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreateUserDTO.html":{}}}],["minlength(4",{"_index":198,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["minlength(6",{"_index":236,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["miscellaneous",{"_index":427,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":540,"title":{},"body":{"index.html":{}}}],["mode",{"_index":456,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":476,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":555,"title":{},"body":{"index.html":{}}}],["name",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["need",{"_index":526,"title":{},"body":{"index.html":{}}}],["nest",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["nestframework",{"_index":559,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":167,"title":{},"body":{"classes/CreatePostDTO.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":260,"title":{},"body":{"classes/PatchUserDTO.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":197,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":362,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["node.js",{"_index":438,"title":{},"body":{"index.html":{}}}],["npm",{"_index":450,"title":{},"body":{"index.html":{}}}],["number",{"_index":250,"title":{},"body":{"classes/PatchPostDTO.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object",{"_index":204,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["object\"}'})@isoptional()@isjson",{"_index":149,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["offer",{"_index":537,"title":{},"body":{"index.html":{}}}],["official",{"_index":483,"title":{},"body":{"index.html":{}}}],["open",{"_index":542,"title":{},"body":{"index.html":{}}}],["optional",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/GetUserParamsDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options.dto",{"_index":193,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["options.dto.ts",{"_index":214,"title":{},"body":{"classes/CreatePostMetaOptionsDTO.html":{},"coverage.html":{}}}],["options.dto.ts:6",{"_index":216,"title":{},"body":{"classes/CreatePostMetaOptionsDTO.html":{}}}],["options.dto.ts:9",{"_index":217,"title":{},"body":{"classes/CreatePostMetaOptionsDTO.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":564,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":411,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":137,"title":{},"body":{"classes/CreatePostDTO.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":287,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["params.dto",{"_index":352,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["params.dto.ts",{"_index":241,"title":{},"body":{"classes/GetUserParamsDTO.html":{},"coverage.html":{}}}],["params.dto.ts:11",{"_index":244,"title":{},"body":{"classes/GetUserParamsDTO.html":{}}}],["parseintpipe",{"_index":288,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["part",{"_index":527,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":253,"title":{},"body":{"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{}}}],["partialtype(createpostdto",{"_index":249,"title":{},"body":{"classes/PatchPostDTO.html":{}}}],["partialtype(createuserdto",{"_index":259,"title":{},"body":{"classes/PatchUserDTO.html":{}}}],["passed",{"_index":166,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["password",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{}}}],["patch",{"_index":289,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["patchpostdto",{"_index":246,"title":{"classes/PatchPostDTO.html":{}},"body":{"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"coverage.html":{}}}],["patchuser",{"_index":327,"title":{},"body":{"controllers/UserController.html":{}}}],["patchuser(@body",{"_index":374,"title":{},"body":{"controllers/UserController.html":{}}}],["patchuser(patchuserdto",{"_index":348,"title":{},"body":{"controllers/UserController.html":{}}}],["patchuserdto",{"_index":257,"title":{"classes/PatchUserDTO.html":{}},"body":{"classes/PatchUserDTO.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["per",{"_index":341,"title":{},"body":{"controllers/UserController.html":{}}}],["platform",{"_index":481,"title":{},"body":{"index.html":{}}}],["please",{"_index":509,"title":{},"body":{"index.html":{}}}],["position",{"_index":344,"title":{},"body":{"controllers/UserController.html":{}}}],["possible",{"_index":135,"title":{},"body":{"classes/CreatePostDTO.html":{},"index.html":{}}}],["post",{"_index":116,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":270,"title":{},"body":{"controllers/PostController.html":{}}}],["post'})@isstring()@isoptional",{"_index":118,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post'})@isstring()@minlength(4)@isnotempty",{"_index":174,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.controller",{"_index":312,"title":{},"body":{"modules/PostModule.html":{}}}],["post.dto",{"_index":254,"title":{},"body":{"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["post.dto.ts",{"_index":102,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/PatchPostDTO.html":{},"coverage.html":{}}}],["post.dto.ts:11",{"_index":252,"title":{},"body":{"classes/PatchPostDTO.html":{}}}],["post.dto.ts:122",{"_index":132,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:28",{"_index":175,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:36",{"_index":140,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:47",{"_index":159,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:55",{"_index":165,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:63",{"_index":119,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:71",{"_index":150,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:79",{"_index":123,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:87",{"_index":146,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post.dto.ts:97",{"_index":171,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["post/post.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["postcontroller",{"_index":263,"title":{"controllers/PostController.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"coverage.html":{}}}],["postmodule",{"_index":31,"title":{"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postservice",{"_index":290,"title":{"injectables/PostService.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":160,"title":{},"body":{"classes/CreatePostDTO.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":107,"title":{},"body":{"classes/CreatePostDTO.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":458,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":437,"title":{},"body":{"index.html":{}}}],["project",{"_index":448,"title":{},"body":{"index.html":{}}}],["properties",{"_index":103,"title":{"properties.html":{}},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"properties.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/auth/auth.service",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/post/post.service",{"_index":291,"title":{},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{}}}],["providers/user/user.service",{"_index":353,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["published",{"_index":142,"title":{},"body":{"classes/CreatePostDTO.html":{},"miscellaneous/enumerations.html":{}}}],["published'})@isenum(poststatus)@isnotempty",{"_index":164,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["publishon",{"_index":108,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["query",{"_index":342,"title":{},"body":{"controllers/UserController.html":{}}}],["query('limit",{"_index":361,"title":{},"body":{"controllers/UserController.html":{}}}],["query('page",{"_index":364,"title":{},"body":{"controllers/UserController.html":{}}}],["questions",{"_index":507,"title":{},"body":{"index.html":{}}}],["read",{"_index":550,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":466,"title":{},"body":{"index.html":{}}}],["real",{"_index":522,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":335,"title":{},"body":{"controllers/UserController.html":{}}}],["repository",{"_index":447,"title":{},"body":{"index.html":{}}}],["request",{"_index":372,"title":{},"body":{"controllers/UserController.html":{}}}],["required",{"_index":127,"title":{},"body":{"classes/CreatePostDTO.html":{},"controllers/UserController.html":{}}}],["requiring",{"_index":489,"title":{},"body":{"index.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":501,"title":{},"body":{"index.html":{}}}],["response",{"_index":272,"title":{},"body":{"controllers/PostController.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":340,"title":{},"body":{"controllers/UserController.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["review",{"_index":163,"title":{},"body":{"classes/CreatePostDTO.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":452,"title":{},"body":{"index.html":{}}}],["runs",{"_index":472,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":213,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["scalable",{"_index":442,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":162,"title":{},"body":{"classes/CreatePostDTO.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":109,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["sent",{"_index":371,"title":{},"body":{"controllers/UserController.html":{}}}],["serialized",{"_index":147,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["series",{"_index":200,"title":{},"body":{"classes/CreatePostDTO.html":{},"miscellaneous/enumerations.html":{}}}],["series'})@isenum(posttype)@isnotempty",{"_index":139,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["server",{"_index":443,"title":{},"body":{"index.html":{}}}],["setup",{"_index":449,"title":{},"body":{"index.html":{}}}],["side",{"_index":444,"title":{},"body":{"index.html":{}}}],["sidebarenabled",{"_index":211,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["simple",{"_index":491,"title":{},"body":{"index.html":{}}}],["slug",{"_index":110,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"classes/PatchUserDTO.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["specific",{"_index":242,"title":{},"body":{"classes/GetUserParamsDTO.html":{}}}],["sponsors",{"_index":545,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../post",{"_index":429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":380,"title":{},"body":{"modules/UserModule.html":{}}}],["src/auth/auth.module.ts",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth/auth.service",{"_index":389,"title":{},"body":{"injectables/UserService.html":{}}}],["src/auth/providers/auth/auth.service.ts",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth/auth.service.ts:11",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth/auth.service.ts:17",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth/auth.service.ts:5",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/post/dtos/create",{"_index":101,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["src/post/dtos/patch",{"_index":247,"title":{},"body":{"classes/PatchPostDTO.html":{},"coverage.html":{}}}],["src/post/enums/post",{"_index":432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/post/post.controller.ts",{"_index":264,"title":{},"body":{"controllers/PostController.html":{},"coverage.html":{}}}],["src/post/post.controller.ts:21",{"_index":278,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:33",{"_index":275,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:45",{"_index":284,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.module.ts",{"_index":311,"title":{},"body":{"modules/PostModule.html":{}}}],["src/post/providers/post/post.service.ts",{"_index":313,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/post/providers/post/post.service.ts:25",{"_index":317,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/providers/post/post.service.ts:6",{"_index":315,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/providers/post/post.service.ts:9",{"_index":319,"title":{},"body":{"injectables/PostService.html":{}}}],["src/user/dtos/create",{"_index":219,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["src/user/dtos/get",{"_index":240,"title":{},"body":{"classes/GetUserParamsDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/dtos/patch",{"_index":258,"title":{},"body":{"classes/PatchUserDTO.html":{},"coverage.html":{}}}],["src/user/providers/user/user.service",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{}}}],["src/user/providers/user/user.service.ts",{"_index":381,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/providers/user/user.service.ts:12",{"_index":386,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/providers/user/user.service.ts:27",{"_index":388,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/providers/user/user.service.ts:6",{"_index":384,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.controller.ts",{"_index":324,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:45",{"_index":347,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:54",{"_index":329,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:61",{"_index":349,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostModule.html":{}}}],["src/user/user.module.ts",{"_index":378,"title":{},"body":{"modules/UserModule.html":{}}}],["start",{"_index":454,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":457,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":459,"title":{},"body":{"index.html":{}}}],["started",{"_index":436,"title":{"index.html":{}},"body":{}}],["starter",{"_index":446,"title":{},"body":{"index.html":{}}}],["statements",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":111,"title":{},"body":{"classes/CreatePostDTO.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["status.enum",{"_index":189,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["status.enum.ts",{"_index":430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":530,"title":{},"body":{"index.html":{}}}],["steps",{"_index":469,"title":{},"body":{"index.html":{}}}],["story",{"_index":138,"title":{},"body":{"classes/CreatePostDTO.html":{},"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":487,"title":{},"body":{"index.html":{}}}],["string",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["successfully",{"_index":303,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["successfully'})@patch",{"_index":283,"title":{},"body":{"controllers/PostController.html":{}}}],["successfully'})@post",{"_index":274,"title":{},"body":{"controllers/PostController.html":{}}}],["summary",{"_index":302,"title":{},"body":{"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["support",{"_index":508,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":562,"title":{},"body":{"modules.html":{}}}],["table",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":112,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["take",{"_index":470,"title":{},"body":{"index.html":{}}}],["test",{"_index":173,"title":{},"body":{"classes/CreatePostDTO.html":{},"injectables/PostService.html":{},"index.html":{}}}],["test:covdeployment",{"_index":464,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":463,"title":{},"body":{"index.html":{}}}],["tests",{"_index":460,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":544,"title":{},"body":{"index.html":{}}}],["this._authservice.isauth",{"_index":390,"title":{},"body":{"injectables/UserService.html":{}}}],["this._postservice.create(post",{"_index":305,"title":{},"body":{"controllers/PostController.html":{}}}],["this._postservice.findall(userid",{"_index":301,"title":{},"body":{"controllers/PostController.html":{}}}],["this._userservice.findall(getuserparamsdto",{"_index":366,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.findonebyid(id",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._userservice.findonebyid(userid",{"_index":320,"title":{},"body":{"injectables/PostService.html":{}}}],["this.firstname",{"_index":237,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["this.lastname",{"_index":238,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["time",{"_index":523,"title":{},"body":{"index.html":{}}}],["title",{"_index":113,"title":{},"body":{"classes/CreatePostDTO.html":{},"injectables/PostService.html":{}}}],["touch",{"_index":552,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":194,"title":{},"body":{"classes/CreatePostDTO.html":{},"dependencies.html":{}}}],["true",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{}}}],["true})@minlength(3",{"_index":169,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["true})@type(undefined",{"_index":131,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["twitter",{"_index":558,"title":{},"body":{"index.html":{}}}],["type",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["type.enum",{"_index":190,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["type.enum.ts",{"_index":431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":261,"title":{},"body":{"classes/PatchUserDTO.html":{},"dependencies.html":{}}}],["typescript",{"_index":207,"title":{},"body":{"classes/CreatePostDTO.html":{},"index.html":{}}}],["typescript\"]'})@isoptional()@isarray()@isstring({each",{"_index":168,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":130,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["unit",{"_index":461,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":569,"title":{},"body":{"properties.html":{}}}],["update",{"_index":256,"title":{},"body":{"classes/PatchPostDTO.html":{},"controllers/PostController.html":{}}}],["update'})@isint()@isnotempty",{"_index":251,"title":{},"body":{"classes/PatchPostDTO.html":{}}}],["updated",{"_index":282,"title":{},"body":{"controllers/PostController.html":{}}}],["updatepost",{"_index":267,"title":{},"body":{"controllers/PostController.html":{}}}],["updatepost(@body",{"_index":306,"title":{},"body":{"controllers/PostController.html":{}}}],["updatepost(patchpostdto",{"_index":280,"title":{},"body":{"controllers/PostController.html":{}}}],["updates",{"_index":532,"title":{},"body":{"index.html":{}}}],["url",{"_index":152,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["url'})@isstring()@isnotempty()@matches(/^[a",{"_index":153,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["user",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserParamsDTO.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":379,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":262,"title":{},"body":{"classes/PatchUserDTO.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":220,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/PatchUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":227,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:21",{"_index":229,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:25",{"_index":225,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:30",{"_index":231,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:32",{"_index":232,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user/user.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":323,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":279,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["usermodule",{"_index":32,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":336,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":76,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":524,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":186,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["validator",{"_index":187,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"classes/CreateUserDTO.html":{},"classes/GetUserParamsDTO.html":{},"classes/PatchPostDTO.html":{},"dependencies.html":{}}}],["value",{"_index":210,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/CreatePostMetaOptionsDTO.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":136,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["version",{"_index":567,"title":{},"body":{"properties.html":{}}}],["video",{"_index":516,"title":{},"body":{"index.html":{}}}],["visit",{"_index":505,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":519,"title":{},"body":{"index.html":{}}}],["void",{"_index":285,"title":{},"body":{"controllers/PostController.html":{}}}],["want",{"_index":212,"title":{},"body":{"classes/CreatePostDTO.html":{},"classes/PatchPostDTO.html":{},"controllers/UserController.html":{}}}],["watch",{"_index":455,"title":{},"body":{"index.html":{}}}],["website",{"_index":556,"title":{},"body":{"index.html":{}}}],["working",{"_index":504,"title":{},"body":{"index.html":{}}}],["x",{"_index":534,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":548,"title":{},"body":{"index.html":{}}}],["you're",{"_index":465,"title":{},"body":{"index.html":{}}}],["z0",{"_index":154,"title":{},"body":{"classes/CreatePostDTO.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from './user/user.module';\nimport { PostModule } from './post/post.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UserModule, PostModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello from Nest JS-!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly _authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './providers/auth/auth.service';\nimport { AuthController } from './auth.controller';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [forwardRef(() => UserModule)],\n  providers: [AuthService],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAuth\n                        \n                    \n                \n            \n            \n                \nisAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UserService } from 'src/user/providers/user/user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UserService))\n    private readonly _userService: UserService,\n  ) {}\n\n  login(email: string, password: string, id: string) {\n    const user = this._userService.findOneById(id);\n\n    return 'SAMPLE_TOKEN';\n  }\n\n  isAuth(): boolean {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDTO.html":{"url":"classes/CreatePostDTO.html","title":"class - CreatePostDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The content of the post', example: 'The content of the post'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Featured image for the post', example: 'http://localhost:3000/images/image.jpg'})@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostType, description: 'Possible values: post, page, story, series'})@IsEnum(PostType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Date when the post should be published', example: '2021-01-01T00:00:00.000Z'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Serialized JSON schema for the post', example: '{\"type\": \"object\"}'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'For example - \"my-url\"', example: 'my-url'})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'Slug must be in kebab-case'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostStatus, description: 'Possible values: draft, scheduled, review, published'})@IsEnum(PostStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Array of tags passed as string values', example: '[\"nestjs\", \"typescript\"]'})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'This is a test title', description: 'The title of the post'})@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { PostStatus } from '../enums/post-status.enum';\nimport { PostType } from '../enums/post-type.enum';\nimport { CreatePostMetaOptionsDTO } from './create-post-meta-options.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDTO {\n  @ApiProperty({\n    example: 'This is a test title',\n    description: 'The title of the post',\n  })\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    enum: PostType,\n    description: 'Possible values: post, page, story, series',\n  })\n  @IsEnum(PostType)\n  @IsNotEmpty()\n  postType: PostType;\n\n  @ApiProperty({\n    description: 'For example - \"my-url\"',\n    example: 'my-url',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message: 'Slug must be in kebab-case',\n  })\n  slug: string;\n\n  @ApiProperty({\n    enum: PostStatus,\n    description: 'Possible values: draft, scheduled, review, published',\n  })\n  @IsEnum(PostStatus)\n  @IsNotEmpty()\n  status: PostStatus;\n\n  @ApiPropertyOptional({\n    description: 'The content of the post',\n    example: 'The content of the post',\n  })\n  @IsString()\n  @IsOptional()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description: 'Serialized JSON schema for the post',\n    example: '{\"type\": \"object\"}',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'Featured image for the post',\n    example: 'http://localhost:3000/images/image.jpg',\n  })\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: 'Date when the post should be published',\n    example: '2021-01-01T00:00:00.000Z',\n  })\n  @IsISO8601()\n  @IsOptional()\n  publishOn?: Date;\n\n  @ApiPropertyOptional({\n    description: 'Array of tags passed as string values',\n    example: '[\"nestjs\", \"typescript\"]',\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          description: 'The key can be any string value',\n          example: 'sidebarEnabled',\n        },\n        value: {\n          type: 'string',\n          description: 'Any value that you want to save to the key',\n          example: true,\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDTO)\n  metaOptions?: CreatePostMetaOptionsDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDTO.html":{"url":"classes/CreatePostMetaOptionsDTO.html","title":"class - CreatePostMetaOptionsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dtos/create-post-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/create-post-meta-options.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDTO {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFullName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFullName\n                        \n                    \n                \n            \n            \n                \ngetFullName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/dtos/create-user.dto.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDTO {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(30)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(30)\n  lastName: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6)\n  password: string;\n\n  getFullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserParamsDTO.html":{"url":"classes/GetUserParamsDTO.html","title":"class - GetUserParamsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserParamsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/get-user-params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with a specific id', example: 'asd123'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/get-user-params.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class GetUserParamsDTO {\n  @ApiPropertyOptional({\n    description: 'Get user with a specific id',\n    example: 'asd123',\n  })\n  @IsNotEmpty()\n  @IsString()\n  id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDTO.html":{"url":"classes/PatchPostDTO.html","title":"class - PatchPostDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDTO)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the post that you want to update'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dtos/patch-post.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreatePostDTO } from './create-post.dto';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class PatchPostDTO extends PartialType(CreatePostDTO) {\n  @ApiProperty({\n    description: 'The ID of the post that you want to update',\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDTO.html":{"url":"classes/PatchUserDTO.html","title":"class - PatchUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDTO)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDTO } from './create-user.dto';\n\nexport class PatchUserDTO extends PartialType(CreateUserDTO) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostController.html":{"url":"controllers/PostController.html","title":"controller - PostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                post\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createPost\n                            \n                            \n                                    \n                                getPost\n                            \n                            \n                                    \n                                    \n                                    \n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(post: CreatePostDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a post'})@ApiResponse({status: 201, description: 'You get a 201 response if the post is created successfully'})@Post('/')\n                \n            \n\n                    \n                        \n                            Defined in src/post/post.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            CreatePostDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPost(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/post/post.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostDTO: PatchPostDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a post'})@ApiResponse({status: 200, description: 'You get a 200 response if the post is updated successfully'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/post/post.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDTO\n                                            \n                                                            PatchPostDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { PostService } from './providers/post/post.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDTO } from './dtos/create-post.dto';\nimport { PatchPostDTO } from './dtos/patch-post.dto';\n\n@Controller('post')\n@ApiTags('Post')\nexport class PostController {\n  constructor(private readonly _postService: PostService) {}\n\n  @Get('/:userId')\n  getPost(@Param('userId', ParseIntPipe) userId: string) {\n    return this._postService.findAll(userId);\n  }\n\n  @ApiOperation({\n    summary: 'Create a post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'You get a 201 response if the post is created successfully',\n  })\n  @Post('/')\n  createPost(@Body() post: CreatePostDTO) {\n    return this._postService.create(post);\n  }\n\n  @ApiOperation({\n    summary: 'Update a post',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'You get a 200 response if the post is updated successfully',\n  })\n  @Patch()\n  updatePost(@Body() patchPostDTO: PatchPostDTO) {\n    console.log(patchPostDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\ncluster_PostModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nUserModule->PostModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostController } from './post.controller';\nimport { PostService } from './providers/post/post.service';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  controllers: [PostController],\n  providers: [PostService],\n  imports: [UserModule],\n})\nexport class PostModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/providers/post/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/post/providers/post/post.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(post: CreatePostDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/providers/post/post.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            CreatePostDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/providers/post/post.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePostDTO } from 'src/post/dtos/create-post.dto';\nimport { UserService } from 'src/user/providers/user/user.service';\n\n@Injectable()\nexport class PostService {\n  constructor(private readonly _userService: UserService) {}\n\n  findAll(userId: string) {\n    const user = this._userService.findOneById(userId);\n    return [\n      {\n        user: user,\n        title: 'Test title',\n        content: 'Test content',\n      },\n      {\n        user: user,\n        title: 'Test title 2',\n        content: 'Test content 2',\n      },\n    ];\n  }\n\n  create(post: CreatePostDTO) {\n    return 'Post created ' + JSON.stringify(post);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getUser\n                            \n                            \n                                    \n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDTO\n                                            \n                                                            CreateUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(getUserParamsDTO: GetUserParamsDTO, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetch a list of registered users on the app'})@ApiResponse({status: 200, description: 'The list of registered users has been successfully fetched'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the API to return', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamsDTO\n                                            \n                                                            GetUserParamsDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDTO: PatchUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDTO\n                                            \n                                                            PatchUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDTO\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  DefaultValuePipe,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { CreateUserDTO } from './dtos/create-user.dto';\nimport { GetUserParamsDTO } from './dtos/get-user-params.dto';\nimport { PatchUserDTO } from './dtos/patch-user.dto';\nimport { UserService } from './providers/user/user.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('user')\n@ApiTags('User')\nexport class UserController {\n  constructor(private readonly _userService: UserService) {}\n  @Get('/:id?')\n  @ApiOperation({\n    summary: 'Fetch a list of registered users on the app',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The list of registered users has been successfully fetched',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the API to return',\n    example: 1,\n  })\n  getUser(\n    @Param() getUserParamsDTO: GetUserParamsDTO,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this._userService.findAll(getUserParamsDTO, limit, page);\n  }\n\n  @Post()\n  createUser(@Body() createUserDTO: CreateUserDTO) {\n    console.log(createUserDTO instanceof CreateUserDTO);\n    console.log(createUserDTO.getFullName());\n    return 'You sent a post request to user endpoint';\n  }\n\n  @Patch()\n  patchUser(@Body() patchUserDTO: PatchUserDTO) {\n    return patchUserDTO;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './providers/user/user.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [forwardRef(() => AuthModule)],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/providers/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/user/providers/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(getUserParamsDTO: GetUserParamsDTO, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/providers/user/user.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamsDTO\n                                            \n                                                            GetUserParamsDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/providers/user/user.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: string; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { AuthService } from 'src/auth/providers/auth/auth.service';\nimport { GetUserParamsDTO } from 'src/user/dtos/get-user-params.dto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly _authService: AuthService,\n  ) {}\n\n  findAll(getUserParamsDTO: GetUserParamsDTO, limit: number, page: number) {\n    const isAuth = this._authService.isAuth();\n    console.log(isAuth);\n    return [\n      {\n        firstName: 'John',\n        email: 'john@doe.com',\n      },\n      {\n        firstName: 'Jane',\n        email: 'jane@doe.com',\n      },\n    ];\n  }\n\n  findOneById(id: string) {\n    return {\n      id: id,\n      firstName: 'John',\n      email: 'john@doe.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/post/dtos/create-post-meta-options.dto.ts\n            \n            class\n            CreatePostMetaOptionsDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/post/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDTO\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/post/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/post/post.controller.ts\n            \n            controller\n            PostController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/post/providers/post/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dtos/get-user-params.dto.ts\n            \n            class\n            GetUserParamsDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/providers/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostStatus   (src/.../post-status.enum.ts)\n                        \n                        \n                            PostType   (src/.../post-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/post/enums/post-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/post/enums/post-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 post\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nPostModule -->\n\nUserModule->PostModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
